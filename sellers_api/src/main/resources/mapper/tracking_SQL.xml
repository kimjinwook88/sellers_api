<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="tracking">
	<!-- 고객이슈 -->
	<select id="selectClientIssueTracking" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
		SELECT 
			CIL.ISSUE_ID,
			CIL.SALES_REPRESENTIVE_ID,
			CIL.ISSUE_SUBJECT,
			CIL.DUE_DATE,
			CIL.ISSUE_DETAIL,
			CIL.SOLVE_OWNER,
			CIL.ISSUE_CLOSE_DATE,
			CIL.ISSUE_DATE,
			GROUP_CONCAT(CII.CUSTOMER_NAME,'[',CCI.COMPANY_NAME,']') AS CUSTOMER_INFOS,
			OMI.HAN_NAME AS SOLVE_OWNER_NAME,
			OMI.POSITION_STATUS
		FROM 
		CLIENT_ISSUE_LOG AS CIL
		LEFT OUTER JOIN
		COM_CLIENT_LIST AS CCL ON (CCL.LOG_ID = CIL.ISSUE_ID AND CCL.CATEGORY = '2')
		LEFT OUTER JOIN
		CLIENT_INDIVIDUAL_INFO AS CII ON CII.CUSTOMER_ID = CCL.CLIENT_ID
		LEFT OUTER JOIN
		CLIENT_COMPANY_INFO AS CCI ON CCI.COMPANY_ID = CII.COMPANY_ID
		LEFT OUTER JOIN
		OUR_MEMBERS_INFO AS OMI ON OMI.MEMBER_ID_NUM = CIL.SOLVE_OWNER
		WHERE 1=1
		]]>
		<choose>
			<when test="ISSUE_ID != null and ISSUE_ID != '' ">
			AND CIL.ISSUE_ID = #{ISSUE_ID}
			</when>
			<otherwise>
			AND CIL.ISSUE_CLOSE_DATE IS NULL
			</otherwise>
		</choose>
		GROUP BY CIL.ISSUE_ID
		ORDER BY CIL.SALES_REPRESENTIVE_ID ASC
	</select>
	
	<!-- 고객이슈 액션 플랜 -->
	<select id="selectClientIssueActionPlanTracking" parameterType="hashmap" resultType="hashmap">
		SELECT 
			CIA.ISSUE_ID,
			CIA.SOLVE_PLAN,
			CIA.SOLVE_OWNER AS SOLVE_OWNER_NAME,
			CIA.SOLVE_OWNER_ID AS SOLVE_OWNER_ID2,
			CIA.DUE_DATE,
			CIA.CLOSE_DATE,
			CIL.ISSUE_SUBJECT,
			CIL.SOLVE_OWNER AS SOLVE_OWNER_ID1,
			CIL.SALES_REPRESENTIVE_ID,
			OMI.POSITION_STATUS,
			GROUP_CONCAT(CII.CUSTOMER_NAME,'[',CCI.COMPANY_NAME,']') AS CUSTOMER_INFOS
		FROM 
		CLIENT_ISSUE_LOG AS CIL
		INNER JOIN
		CLIENT_ISSUE_ACTION_PLAN AS CIA ON CIL.ISSUE_ID = CIA.ISSUE_ID
		LEFT OUTER JOIN
		COM_CLIENT_LIST AS CCL ON (CCL.LOG_ID = CIL.ISSUE_ID AND CCL.CATEGORY = '2')
		LEFT OUTER JOIN
		CLIENT_INDIVIDUAL_INFO AS CII ON CII.CUSTOMER_ID = CCL.CLIENT_ID
		LEFT OUTER JOIN
		CLIENT_COMPANY_INFO AS CCI ON CII.COMPANY_ID = CCI.COMPANY_ID
		LEFT OUTER JOIN
		OUR_MEMBERS_INFO AS OMI ON OMI.MEMBER_ID_NUM = CIA.SOLVE_OWNER_ID
		WHERE 1=1
		AND CIA.DUE_DATE IS NOT NULL
		AND CIA.CLOSE_DATE IS NULL
		GROUP BY CIA.ACTION_ID
	</select>
	
	<!-- 알림창 -->
	<insert id="insertNotice" parameterType="hashmap">
		INSERT INTO NOTICE_INFO
			(
				MEMBER_ID_NUM,
				NOTICE_DETAIL,
				NOTICE_CATEGORY,
				NOTICE_REDIRECT_URL,
				EVENT_ID,
				NOTICE_CODE,
				OVER_DUE_FLAG,
				NOTICE_DEL_YN
			)
				VALUES
			(
				#{memberID},
				#{noticeDetail},
				#{noticeCategory},
				#{shareURL},
				#{hiddenModalEventId},
				#{noticeCode},
				#{OVER_DUE_FLAG},
				'N'
				
			);
	</insert>
	
	<delete id="deleteTrackingNotice" parameterType="Integer">
	       DELETE FROM NOTICE_INFO
	       WHERE 1=1
	       AND NOTICE_CATEGORY = 'TRACKING'
	</delete>
	
	
	<select id="selectOuruserInfo" parameterType="hashmap" resultType="hashmap">
		SELECT 
			DISTINCT OMI.EMAIL
		FROM OUR_MEMBERS_INFO AS OMI
		WHERE 1=1
		AND OMI.EMAIL IS NOT NULL
		AND OMI.MEMBER_ID_NUM = #{MEMBER_ID_NUM}
		OR OMI.MEMBER_ID_NUM = (
			SELECT 
			ODI.DIVISION_LEADER
			FROM OUR_DIVISION_INFO AS ODI
			LEFT OUTER JOIN
				OUR_MEMBERS_INFO AS OMI2 ON OMI2.MEMBER_DIVISION = ODI.DIVISION_NO
			WHERE 1=1
			AND OMI2.MEMBER_ID_NUM = #{MEMBER_ID_NUM}
		)
	</select>
	
	
	
	<select id="selectClientContactFollowUpActionTracking" parameterType="java.util.List" resultType="hashmap">
		SELECT 
			CEA.ACTION_ID, 
			CEA.EVENT_ID, 
			CEA.CREATOR_ID, 
			CEA.ACTION_ITEM, 
			CEA.CONTENTS, 
			CEA.SOLVE_OWNER_ID,
			<!-- CEA.SOLVE_OWNER,  -->
			OMI.HAN_NAME AS SOLVE_OWNER,
			OMI.POSITION_STATUS,
			CEA.SOLVE_DUE_DATE, 
			CEA.SOLVE_CLOSE_DATE, 
			CEA.SYS_REGISTER_DATE, 
			CEA.SYS_UPDATE_DATE, 
			CEA.STATUS,
			CEA.STATUS AS HIDDEN_STATUS,
			
			CEL.EVENT_SUBJECT,
			CEL.EVENT_CONTENTS,
			CEL.EVENT_DATE,
			CEL.EVENT_CATEGORY,
			GROUP_CONCAT(CII.CUSTOMER_NAME,'[',CCI.COMPANY_NAME,']') AS CUSTOMER_INFOS
		FROM CLIENT_EVENT_ACTION AS CEA
		LEFT OUTER JOIN
		CLIENT_EVENT_LOG AS CEL ON CEL.EVENT_ID = CEA.EVENT_ID
		LEFT OUTER JOIN
		COM_CLIENT_LIST AS CCL ON (CCL.LOG_ID = CEL.EVENT_ID AND CCL.CATEGORY = '1')
		LEFT OUTER JOIN
		CLIENT_INDIVIDUAL_INFO AS CII ON CII.CUSTOMER_ID = CCL.CLIENT_ID
		LEFT OUTER JOIN
		CLIENT_COMPANY_INFO AS CCI ON CCI.COMPANY_ID = CII.COMPANY_ID
		LEFT OUTER JOIN
		OUR_MEMBERS_INFO AS OMI ON OMI.MEMBER_ID_NUM = CEA.SOLVE_OWNER_ID
		WHERE 1=1
		AND CEA.SOLVE_DUE_DATE IS NOT NULL
		AND CEA.SOLVE_CLOSE_DATE IS NULL
		GROUP BY CEA.ACTION_ID
	</select>
	
	<select id="selectOpportunityMilestonesTracking" parameterType="java.util.List" resultType="hashmap">
		SELECT 
				OM.MILESTONE_ID, 
				OM.OPPORTUNITY_ID, 
				OM.CREATOR_ID, 
				OM.KEY_MILESTONE, 
				OM.MILESTONE_SEQ, 
				OM.DUE_DATE, 
				OM.CLOSE_DATE, 
				OM.SYS_REGISTER_DATE, 
				OM.SYS_UPDATE_DATE, 
				OM.STATUS,
				OM.ACT_ID,
				OM.ACT_NAME,
				OMI.POSITION_STATUS,
				
				OL.CONTRACT_AMOUNT,
				OL.GP_AMOUNT,
				OL.SUBJECT,
				OL.OPPORTUNITY_ID,
				OL.EXEC_ID,
				OL.OWNER_ID,
				OL.IDENTIFIER_ID,
				OL.DETAIL_CONENTS,
				
				CCI.COMPANY_NAME,
				<!-- CII.CUSTOMER_NAME -->
				CCI2.COMPANY_NAME AS END_USER
			FROM OPPORTUNITY_MILESTONE AS OM
			LEFT OUTER JOIN
			OPPORTUNITY_LOG AS OL ON OL.OPPORTUNITY_ID = OM.OPPORTUNITY_ID
			LEFT OUTER JOIN
			CLIENT_COMPANY_INFO AS CCI ON CCI.COMPANY_ID = OL.COMPANY_ID
			<!-- LEFT OUTER JOIN
			CLIENT_INDIVIDUAL_INFO AS CII ON CII.CUSTOMER_ID = OL.CUSTOMER_ID -->
			LEFT OUTER JOIN
			CLIENT_COMPANY_INFO AS CCI2 ON CCI2.COMPANY_ID = OL.CUSTOMER_ID
			LEFT OUTER JOIN
			OUR_MEMBERS_INFO AS OMI ON OMI.MEMBER_ID_NUM = OM.ACT_ID
			WHERE 1=1
			AND OL.TEMP_FLAG = 'N'
			AND DUE_DATE IS NOT NULL
			AND OM.CLOSE_DATE IS NULL
	</select>
	
	<select id="selectHiddenOpportunityActionPlanTracking" parameterType="java.util.List" resultType="hashmap">
		SELECT 
			OHA.ACTION_ID, 
			OHA.OPPORTUNITY_HIDDEN_ID, 
			OHA.DETAIL_CONENTS, 
			OMI.POSITION_STATUS,
			OHA.DUE_DATE, 
			OHA.ACTION_OWNER_ID,
			OMI.HAN_NAME AS ACTION_OWNER,
			OMI.POSITION_STATUS,
			OHA.CLOSE_DATE, 
			OHA.CREATOR_ID, 
			OHA.SYS_REGISTER_DATE, 
			OHA.SYS_UPDATE_DATE,
			
			OHL.SUBJECT,
			OHL.SALESMAN_ID,
			OHL.DETAIL_CONENTS AS MAJOR_CONENTS,
			
			CCI.COMPANY_NAME,
			<!-- CII.CUSTOMER_NAME -->
			CCI2.COMPANY_NAME AS END_USER
			
		FROM OPPORTUNITY_HIDDEN_ACTION AS OHA
		LEFT OUTER JOIN
		OPPORTUNITY_HIDDEN_LOG AS OHL ON OHL.OPPORTUNITY_HIDDEN_ID = OHA.OPPORTUNITY_HIDDEN_ID
		LEFT OUTER JOIN
		CLIENT_COMPANY_INFO AS CCI ON CCI.COMPANY_ID = OHL.COMPANY_ID
		<!-- LEFT OUTER JOIN
		CLIENT_INDIVIDUAL_INFO AS CII ON CII.CUSTOMER_ID = OHL.CUSTOMER_ID -->
		LEFT OUTER JOIN
		CLIENT_COMPANY_INFO AS CCI2 ON CCI2.COMPANY_ID = OHL.CUSTOMER_ID
		LEFT OUTER JOIN
		OUR_MEMBERS_INFO AS OMI ON OMI.MEMBER_ID_NUM = OHA.ACTION_OWNER_ID
		WHERE 1=1
		AND OHA.DUE_DATE IS NOT NULL
		AND OHA.CLOSE_DATE IS NULL
	</select>
	
	<select id="selectOpportunityContractDateTracking" parameterType="java.util.List" resultType="hashmap">
		SELECT
			OL.OPPORTUNITY_ID,
			OL.SUBJECT,
			OL.CUSTOMER_ID AS END_CLIENT_ID,
			CCI.COMPANY_NAME AS END_CLIENT_NAME,
			OL.COMPANY_ID as SALES_COMPANY_ID,
			CCI2.COMPANY_NAME AS SALES_COMPANY_NAME,
			OL.CONTRACT_AMOUNT,
			OL.CONTRACT_DATE,
			OL.IDENTIFIER_ID,
			OMI1.HAN_NAME AS IDENTIFIER_NAME,
			OMI1.POSITION_STATUS AS IDENTIFIER_POSITION,
			OMI1.MEMBER_DIVISION AS IDENTIFIER_DIVISION_NO,
			OL.OWNER_ID,
			OMI2.HAN_NAME AS OWNER_NAME,
			OMI2.POSITION_STATUS AS OWNER_POSITION,
			OL.EXEC_ID,
			OMI3.HAN_NAME AS EXEC_NAME,
			OMI3.POSITION_STATUS AS EXEC_POSITION
		FROM OPPORTUNITY_LOG AS OL
		LEFT OUTER JOIN
			CLIENT_COMPANY_INFO AS CCI ON CCI.COMPANY_ID = OL.CUSTOMER_ID
		LEFT OUTER JOIN
			CLIENT_COMPANY_INFO AS CCI2 ON CCI2.COMPANY_ID = OL.COMPANY_ID
		LEFT OUTER JOIN
			OUR_MEMBERS_INFO AS OMI1 ON OMI1.MEMBER_ID_NUM = IDENTIFIER_ID
		LEFT OUTER JOIN
			OUR_MEMBERS_INFO AS OMI2 ON OMI2.MEMBER_ID_NUM = OWNER_ID
		LEFT OUTER JOIN
			OUR_MEMBERS_INFO AS OMI3 ON OMI3.MEMBER_ID_NUM = EXEC_ID
		WHERE 1=1
		AND OL.TEMP_FLAG = 'N'
		AND OL.CONTRACT_DATE IS NOT NULL
		AND OL.SALES_CYCLE NOT IN (4, 5)
		<!-- AND OL.CONTRACT_DATE BETWEEN DATE_FORMAT(NOW()<if test="AFCOUNT != null and AFCOUNT != '' "> - INTERVAL ${AFCOUNT} DAY</if>, '%Y-%m-%d') 
			AND NOW()<if test="CYCLE != null and CYCLE != '' ">+ INTERVAL ${CYCLE} DAY</if> -->
	</select>
	
	<select id="selectOpportunityAmountTracking" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
		SELECT
			T.MEMBER_ID_NUM,
			T.HAN_NAME,
			T.EMAIL,
			T.MEMBER_DIVISION,
			T.IDENTIFIER_NAME,
			T.OPPORTUNITY_ID,
			T.SUBJECT,
			T.END_CLIENT_ID,
			T.END_CLIENT_NAME,
			T.BASIS_MONTH,
			T.BASIS_PLAN_REVENUE_AMOUNT,
			T.ERP_REV,
			T.BASIS_MONTH_C,
			T.BASIS_PLAN_GP_AMOUNT,
			T.ERP_GP
		FROM (
			SELECT 
				OL.IDENTIFIER_ID AS MEMBER_ID_NUM,
				OMI.HAN_NAME,
				OMI.EMAIL,
				OMI.MEMBER_DIVISION,
				OMI.HAN_NAME AS IDENTIFIER_NAME,
				OL.OPPORTUNITY_ID,
				OL.SUBJECT,
				OL.CUSTOMER_ID AS END_CLIENT_ID,
				CCI.COMPANY_NAME AS END_CLIENT_NAME,
				OA.BASIS_MONTH,
				OA.BASIS_PLAN_REVENUE_AMOUNT,
				OA.ERP_REV,
				OA.BASIS_MONTH_C,
				OA.BASIS_PLAN_GP_AMOUNT,
				OA.ERP_GP
			FROM OPPORTUNITY_AMOUNT AS OA
			LEFT OUTER JOIN
				OPPORTUNITY_LOG AS OL ON OL.OPPORTUNITY_ID = OA.OPPORTUNITY_ID
			LEFT OUTER JOIN
				CLIENT_COMPANY_INFO AS CCI ON CCI.COMPANY_ID = OL.CUSTOMER_ID
			LEFT OUTER JOIN
				OUR_MEMBERS_INFO AS OMI ON OMI.MEMBER_ID_NUM = OL.IDENTIFIER_ID
			WHERE 1=1
			AND OL.TEMP_FLAG = 'N'
			AND OL.SALES_CYCLE NOT IN ('4', '5')
			AND OL.IDENTIFIER_ID != ''
		]]>
			<choose>
				<when test="TYPE == 'SP' ">
				AND OA.BASIS_MONTH BETWEEN DATE_FORMAT(NOW() - INTERVAL (
					SELECT 
						MAX(CUT.BEFORE_DUE_DATE)
					FROM COM_USER_TRACKING AS CUT
					WHERE 1=1
					AND TRACKING_CATEGORY = '5'
				) DAY, '%Y-%m-%d') 
				AND NOW() + INTERVAL (
					SELECT 
						MAX(CUT.AFTER_DUE_DATE)
					FROM COM_USER_TRACKING AS CUT
					WHERE 1=1
					AND TRACKING_CATEGORY = '5'
				) DAY
				</when>
				<when test="TYPE == 'CP' ">
				AND OA.BASIS_MONTH_C BETWEEN DATE_FORMAT(NOW() - INTERVAL (
					SELECT 
						MAX(CUT.BEFORE_DUE_DATE)
					FROM COM_USER_TRACKING AS CUT
					WHERE 1=1
					AND TRACKING_CATEGORY = '6'
				) DAY, '%Y-%m-%d') 
				AND NOW() + INTERVAL (
					SELECT 
						MAX(CUT.AFTER_DUE_DATE)
					FROM COM_USER_TRACKING AS CUT
					WHERE 1=1
					AND TRACKING_CATEGORY = '6'
				) DAY
				</when>
			</choose>
		<![CDATA[
			UNION ALL
			
			SELECT 
				OL.OWNER_ID AS MEMBER_ID_NUM,
				OMI.HAN_NAME,
				OMI.EMAIL,
				OMI.MEMBER_DIVISION,
				OMI2.HAN_NAME AS IDENTIFIER_NAME,
				OL.OPPORTUNITY_ID,
				OL.SUBJECT,
				OL.CUSTOMER_ID AS END_CLIENT_ID,
				CCI.COMPANY_NAME AS END_CLIENT_NAME,
				OA.BASIS_MONTH,
				OA.BASIS_PLAN_REVENUE_AMOUNT,
				OA.ERP_REV,
				OA.BASIS_MONTH_C,
				OA.BASIS_PLAN_GP_AMOUNT,
				OA.ERP_GP
			FROM OPPORTUNITY_AMOUNT AS OA
			LEFT OUTER JOIN
				OPPORTUNITY_LOG AS OL ON OL.OPPORTUNITY_ID = OA.OPPORTUNITY_ID
			LEFT OUTER JOIN
				CLIENT_COMPANY_INFO AS CCI ON CCI.COMPANY_ID = OL.CUSTOMER_ID
			LEFT OUTER JOIN
				OUR_MEMBERS_INFO AS OMI ON OMI.MEMBER_ID_NUM = OL.OWNER_ID
			LEFT OUTER JOIN
				OUR_MEMBERS_INFO AS OMI2 ON OMI2.MEMBER_ID_NUM = OL.IDENTIFIER_ID
			WHERE 1=1
			AND OL.TEMP_FLAG = 'N'
			AND OL.SALES_CYCLE NOT IN ('4', '5')
			AND OL.OWNER_ID != ''
		]]>
			<choose>
				<when test="TYPE == 'SP' ">
				AND OA.BASIS_MONTH BETWEEN DATE_FORMAT(NOW() - INTERVAL (
					SELECT 
						MAX(CUT.BEFORE_DUE_DATE)
					FROM COM_USER_TRACKING AS CUT
					WHERE 1=1
					AND TRACKING_CATEGORY = '5'
				) DAY, '%Y-%m-%d') 
				AND NOW() + INTERVAL (
					SELECT 
						MAX(CUT.AFTER_DUE_DATE)
					FROM COM_USER_TRACKING AS CUT
					WHERE 1=1
					AND TRACKING_CATEGORY = '5'
				) DAY
				</when>
				<when test="TYPE == 'CP' ">
				AND OA.BASIS_MONTH_C BETWEEN DATE_FORMAT(NOW() - INTERVAL (
					SELECT 
						MAX(CUT.BEFORE_DUE_DATE)
					FROM COM_USER_TRACKING AS CUT
					WHERE 1=1
					AND TRACKING_CATEGORY = '6'
				) DAY, '%Y-%m-%d') 
				AND NOW() + INTERVAL (
					SELECT 
						MAX(CUT.AFTER_DUE_DATE)
					FROM COM_USER_TRACKING AS CUT
					WHERE 1=1
					AND TRACKING_CATEGORY = '6'
				) DAY
				</when>
			</choose>
		<![CDATA[
			UNION ALL
			
			SELECT 
				OL.EXEC_ID AS MEMBER_ID_NUM,
				OMI.HAN_NAME,
				OMI.EMAIL,
				OMI.MEMBER_DIVISION,
				OMI2.HAN_NAME AS IDENTIFIER_NAME,
				OL.OPPORTUNITY_ID,
				OL.SUBJECT,
				OL.CUSTOMER_ID AS END_CLIENT_ID,
				CCI.COMPANY_NAME AS END_CLIENT_NAME,
				OA.BASIS_MONTH,
				OA.BASIS_PLAN_REVENUE_AMOUNT,
				OA.ERP_REV,
				OA.BASIS_MONTH_C,
				OA.BASIS_PLAN_GP_AMOUNT,
				OA.ERP_GP
			FROM OPPORTUNITY_AMOUNT AS OA
			LEFT OUTER JOIN
				OPPORTUNITY_LOG AS OL ON OL.OPPORTUNITY_ID = OA.OPPORTUNITY_ID
			LEFT OUTER JOIN
				CLIENT_COMPANY_INFO AS CCI ON CCI.COMPANY_ID = OL.CUSTOMER_ID
			LEFT OUTER JOIN
				OUR_MEMBERS_INFO AS OMI ON OMI.MEMBER_ID_NUM = OL.EXEC_ID
			LEFT OUTER JOIN
				OUR_MEMBERS_INFO AS OMI2 ON OMI2.MEMBER_ID_NUM = OL.IDENTIFIER_ID
			WHERE 1=1
			AND OL.TEMP_FLAG = 'N'
			AND OL.SALES_CYCLE NOT IN ('4', '5')
			AND OL.EXEC_ID != ''
		]]>
			<choose>
				<when test="TYPE == 'SP' ">
				AND OA.BASIS_MONTH BETWEEN DATE_FORMAT(NOW() - INTERVAL (
					SELECT 
						MAX(CUT.BEFORE_DUE_DATE)
					FROM COM_USER_TRACKING AS CUT
					WHERE 1=1
					AND TRACKING_CATEGORY = '5'
				) DAY, '%Y-%m-%d') 
				AND NOW() + INTERVAL (
					SELECT 
						MAX(CUT.AFTER_DUE_DATE)
					FROM COM_USER_TRACKING AS CUT
					WHERE 1=1
					AND TRACKING_CATEGORY = '5'
				) DAY
				</when>
				<when test="TYPE == 'CP' ">
				AND OA.BASIS_MONTH_C BETWEEN DATE_FORMAT(NOW() - INTERVAL (
					SELECT 
						MAX(CUT.BEFORE_DUE_DATE)
					FROM COM_USER_TRACKING AS CUT
					WHERE 1=1
					AND TRACKING_CATEGORY = '6'
				) DAY, '%Y-%m-%d') 
				AND NOW() + INTERVAL (
					SELECT 
						MAX(CUT.AFTER_DUE_DATE)
					FROM COM_USER_TRACKING AS CUT
					WHERE 1=1
					AND TRACKING_CATEGORY = '6'
				) DAY
				</when>
			</choose>
		)AS T
		GROUP BY T.MEMBER_ID_NUM, T.OPPORTUNITY_ID
		ORDER BY MEMBER_ID_NUM
	</select>
	
	<select id="selectClientSatisfactionFollowUpActionTracking" parameterType="java.util.List" resultType="hashmap">
		SELECT 
			CSLA.ACTION_ID,
			CSLA.CSAT_ID, 
			CSLA.SOLVE_PLAN, 
			CSLA.SOLVE_OWNER, 
			CSLA.SOLVE_OWNER_ID,
			CSLA.CSAT_ACTION_DETAIL,
			CSLA.DUE_DATE, 
			CSLA.CLOSE_DATE, 
			CSLA.STATUS, 
			CSLA.SYS_REGISTER_DATE, 
			CSLA.SYS_UPDATE_DATE,
			CSLA.STATUS AS HIDDEN_STATUS,
			
			CSL.CREATOR_ID, 
			CSL.CSAT_SUBJECT,
			CSL.CSAT_SURVEY_ID,
			CSL.CSAT_DETAIL,

			<!-- GROUP_CONCAT(CSDL.COMPANY_NAME) AS CUSTOMER_INFOS, -->
			
			OMI.HAN_NAME,
			OMI2.POSITION_STATUS
		FROM CLIENT_SAT_LOG_ACTION_PLAN AS CSLA
		LEFT OUTER JOIN
		CLIENT_SAT_LOG AS CSL ON CSL.CSAT_ID = CSLA.CSAT_ID
		<!-- LEFT OUTER JOIN
		CLIENT_SATDETAIL_LOG AS CSDL ON CSDL.CSAT_ID = CSLA.CSAT_ID -->
		LEFT OUTER JOIN
		OUR_MEMBERS_INFO AS OMI ON OMI.MEMBER_ID_NUM = CSL.CSAT_SURVEY_ID
		LEFT OUTER JOIN
		OUR_MEMBERS_INFO AS OMI2 ON OMI2.MEMBER_ID_NUM = CSLA.SOLVE_OWNER_ID
		
		WHERE 1=1
		AND DUE_DATE IS NOT NULL
	</select>
	
	
	<select id="selectServiceProjectMilestonesTracking" parameterType="hashmap" resultType="hashmap">
		SELECT 
			PMM.PROJECT_ID,
			PMM.CATEGORY,
			PMM.KEY_MILESTONE,
			PMM.ACT_DUE_DATE,
			PMM.ACT_CLOSE_DATE,
			
			PM.PROJECT_SUBJECT,
			PM.OUR_PM_ID,
			PM.OUR_EXEC_PM_ID,
			PM.SALES_REPRESENTIVE_ID,
			PM.CREATOR_ID,
			
			CCI.COMPANY_NAME,
			CII.CUSTOMER_NAME,
			CII2.CUSTOMER_NAME as CLIENT_EXEC_PM_NAME,
			
			OMI.HAN_NAME AS OUR_EXEC_PM_NAME,
			OMI.POSITION_STATUS AS OUR_EXEC_PM_POSITION,
			OMI2.HAN_NAME AS SALES_REPRESENTIVE_NAME,
			
			TEAM_MEMBER_ID
			
		FROM PROJECT_MGMT_MILESTONE AS PMM
		LEFT OUTER JOIN
		PROJECT_MGMT AS PM ON PM.PROJECT_ID = PMM.PROJECT_ID
		LEFT OUTER JOIN
		CLIENT_COMPANY_INFO AS CCI ON CCI.COMPANY_ID = PM.CLIENT_COMPANY_ID
		LEFT OUTER JOIN
		CLIENT_INDIVIDUAL_INFO AS CII ON CII.CUSTOMER_ID = PM.CUSTOMER_ID
		LEFT OUTER JOIN
		CLIENT_INDIVIDUAL_INFO AS CII2 ON CII2.CUSTOMER_ID = PM.CLIENT_EXEC_PM_ID
		LEFT OUTER JOIN
		OUR_MEMBERS_INFO AS OMI ON OMI.MEMBER_ID_NUM = PM.OUR_EXEC_PM_ID
		LEFT OUTER JOIN
		OUR_MEMBERS_INFO AS OMI2 ON OMI2.MEMBER_ID_NUM = PM.SALES_REPRESENTIVE_ID
		LEFT OUTER JOIN
           (
           	SELECT LOG_ID, GROUP_CONCAT(MEMBER_ID_NUM) AS TEAM_MEMBER_ID FROM COM_MEMBER_LIST 
			WHERE 1=1
			GROUP BY LOG_ID
           )AS TOMI ON TOMI.LOG_ID = PM.PROJECT_ID
		WHERE 1=1
		AND PMM.ACT_DUE_DATE IS NOT NULL
		AND PMM.ACT_CLOSE_DATE IS NULL
		ORDER BY PMM.PROJECT_ID ASC;
	</select>
	
	<select id="selectServiceProjectIssueTracking" parameterType="hashmap" resultType="hashmap">
		SELECT 
			PM.PROJECT_SUBJECT,
			PM.DETAIL_CONTENTS,
			PM.CREATOR_ID,
			PM.OUR_PM_ID,
			PM.OUR_EXEC_PM_ID,
			PM.SALES_REPRESENTIVE_ID,
			
			PMI.PROJECT_ID,
			PMI.SOLVE_OWNER,
			OMI2.POSITION_STATUS AS SOLVE_OWNER_POSITION,
			PMI.SOLVE_OWNER_ID,
			PMI.DUE_DATE,
			PMI.ISSUE_CLOSE_DATE,
			PMI.CHECKLIST_NAME,
			PMI.ISSUE_DETAIL,
			
			CCI.COMPANY_NAME,
			CII.CUSTOMER_NAME,
			CII2.CUSTOMER_NAME AS CLIENT_EXEC_PM_NAME,
			
			OMI.HAN_NAME AS OUR_EXEC_PM_NAME,
			
			TEAM_MEMBER_ID

		FROM PROJECT_MGMT_ISSUE AS PMI
			LEFT OUTER JOIN
			PROJECT_MGMT AS PM ON PM.PROJECT_ID = PMI.PROJECT_ID
			LEFT OUTER JOIN
			CLIENT_COMPANY_INFO AS CCI ON CCI.COMPANY_ID = PM.CLIENT_COMPANY_ID
			LEFT OUTER JOIN
			CLIENT_INDIVIDUAL_INFO AS CII ON CII.CUSTOMER_ID = PM.CUSTOMER_ID
			LEFT OUTER JOIN
			CLIENT_INDIVIDUAL_INFO AS CII2 ON CII2.CUSTOMER_ID = PM.CLIENT_EXEC_PM_ID
			LEFT OUTER JOIN
			OUR_MEMBERS_INFO AS OMI ON OMI.MEMBER_ID_NUM = PM.OUR_EXEC_PM_ID
			LEFT OUTER JOIN
			OUR_MEMBERS_INFO AS OMI2 ON OMI2.MEMBER_ID_NUM = PMI.SOLVE_OWNER_ID
			LEFT OUTER JOIN
           	(
	           	SELECT LOG_ID, GROUP_CONCAT(MEMBER_ID_NUM) AS TEAM_MEMBER_ID FROM COM_MEMBER_LIST 
				WHERE 1=1
				GROUP BY LOG_ID
           	)AS TOMI ON TOMI.LOG_ID = PM.PROJECT_ID
		WHERE 1=1
		AND PMI.DUE_DATE IS NOT NULL
		AND PMI.ISSUE_CLOSE_DATE IS NULL
	</select>
	
	<select id="selectBizStrategyCompanyKeyMilestonesTracking" parameterType="hashmap" resultType="hashmap">
		SELECT 
			BM.MILESTONE_ID, 
			BM.BIZ_ID, 
			BM.CATEGORY, 
			BM.CREATOR_ID,
			BM.CREATE_DATETIME, 
			BM.KEY_MILESTONE, 
			OMI.HAN_NAME AS ACT_NAME, 
			OMI.POSITION_STATUS AS ACT_POSITION,
			BM.ACT_ID AS HIDDEN_ACT_ID, 
			BM.ACT_DUE_DATE, 
			BM.ACT_CLOSE_DATE, 
			BM.SYS_REGISTER_DATE, 
			BM.SYS_UPDATE_DATE,
			
			BS.SUBJECT,
			BS.RESPONSIBILITY_LEADER,
			OMI2.HAN_NAME as RESPONSIBILITY_LEADER_NAME,
			OMI2.POSITION_STATUS AS RESPONSIBILITY_POSITION
		FROM 
		BIZ_MILESTONE AS BM
		LEFT OUTER JOIN
		OUR_MEMBERS_INFO AS OMI ON BM.ACT_ID = OMI.MEMBER_ID_NUM
		LEFT OUTER JOIN
		BIZ_STRATEGY AS BS ON BS.BIZ_ID = BM.BIZ_ID
		LEFT OUTER JOIN
		OUR_MEMBERS_INFO AS OMI2 ON BS.RESPONSIBILITY_LEADER = OMI2.MEMBER_ID_NUM
		
		WHERE 1=1 
		AND BM.ACT_DUE_DATE IS NOT NULL
		AND BM.ACT_CLOSE_DATE IS NULL
		<choose>
			<when test="category == 'our' ">
			AND BM.CATEGORY != '고객전략'
			</when>
			<when test="category == 'client' ">
			AND BM.CATEGORY = '고객전략'
			</when>
		</choose>
		
		ORDER BY MILESTONE_ID ASC
	</select>
	
	<select id="selectBizStrategyCompanyIssueTracking" parameterType="hashmap" resultType="hashmap">
		SELECT 
			BPA.ACTION_ID,
			BPA.BIZ_ID,
			BPA.CREATOR_ID,
			BPA.ISSUE_NAME,
			BPA.ISSUE_ITEM,
			BPA.ACTION_PLAN_NAME,
			BPA.ACTION_OWNER,
			OMI.POSITION_STATUS AS ACTION_OWNER_POSITION,
			BPA.ACTION_OWNER_ID,
			BPA.DUE_DATE,
			BPA.CLOSE_DATE,
			
			BS.CATEGORY,
			BS.SUBJECT,
			BS.RESPONSIBILITY_LEADER,
			OMI2.HAN_NAME as RESPONSIBILITY_LEADER_NAME

		FROM BIZ_STRATEGY_ACTION_PLAN AS BPA
		LEFT OUTER JOIN
		BIZ_STRATEGY AS BS ON BS.BIZ_ID = BPA.BIZ_ID
		LEFT OUTER JOIN
		OUR_MEMBERS_INFO AS OMI ON BPA.ACTION_OWNER_ID = OMI.MEMBER_ID_NUM
		LEFT OUTER JOIN
		OUR_MEMBERS_INFO AS OMI2 ON BS.RESPONSIBILITY_LEADER = OMI2.MEMBER_ID_NUM
		WHERE 1=1
			AND BPA.DUE_DATE IS NOT NULL
			AND BPA.CLOSE_DATE IS NULL
			<choose>
				<when test="category == 'our' ">
				AND BS.CATEGORY != '고객전략'
				</when>
				<when test="category == 'client' ">
				AND BS.CATEGORY = '고객전략'
				</when>
			</choose>
		ORDER BY BPA.ACTION_ID ASC;
	</select>
	
	<select id="selectBizStrategyProjectPlanMilestonesTracking" parameterType="hashmap" resultType="hashmap">
		SELECT 
			BPM.MILESTONE_ID, 
			BPM.PROJECT_ID, 
			BPM.CATEGORY, 
			BPM.CREATOR_ID,
			BPM.CREATE_DATETIME, 
			BPM.KEY_MILESTONE, 
			BPM.ACT_ID, 
			BPM.ACT_NAME,
			OMI.POSITION_STATUS AS ACT_POSITION,
			BPM.ACT_DUE_DATE, 
			BPM.ACT_CLOSE_DATE, 
			BPM.SYS_REGISTER_DATE, 
			BPM.SYS_UPDATE_DATE,
			
			
			BPP.SUBJECT,
			BPP.EXEC_OWNER,
			BPP.SALES_OWNER,
			BPP.COMPANY_ID,
			
			CCI.COMPANY_NAME
			
		FROM BIZ_PROJECT_MILESTONE AS BPM
		LEFT OUTER JOIN
		BIZ_PROJECT_PLAN AS BPP ON BPP.PROJECT_ID = BPM.PROJECT_ID
		LEFT OUTER JOIN
		CLIENT_COMPANY_INFO AS CCI ON CCI.COMPANY_ID = BPP.COMPANY_ID
		LEFT OUTER JOIN
		OUR_MEMBERS_INFO AS OMI ON OMI.MEMBER_ID_NUM = BPM.ACT_ID
		WHERE 1=1 
		AND BPM.ACT_ID IS NOT NULL
		AND ACT_DUE_DATE IS NOT NULL 
		AND ACT_CLOSE_DATE IS NULL 
		
		ORDER BY MILESTONE_ID ASC
	</select>
	
	
	<select id="selectBizStrategyProjectPlanIssueTracking" parameterType="hashmap" resultType="hashmap">
		SELECT 
		BPA.ACTION_ID,
		BPA.PROJECT_ID,
		BPA.CREATOR_ID,
		BPA.ISSUE_NAME,
		BPA.ISSUE_ITEM,
		BPA.ACTION_PLAN_NAME,
		BPA.ACTION_OWNER,
		OMI.POSITION_STATUS AS ACTION_OWNER_POSITION,
		BPA.ACTION_OWNER_ID,
		BPA.DUE_DATE,
		BPA.CLOSE_DATE,
		
		BPP.SUBJECT,
		BPP.EXEC_OWNER,
		BPP.SALES_OWNER,
		BPP.COMPANY_ID,
		
		CCI.COMPANY_NAME
		
		FROM BIZ_PROJECT_PLAN_ACTION_PLAN AS BPA
		
		LEFT OUTER JOIN
		BIZ_PROJECT_PLAN AS BPP ON BPP.PROJECT_ID = BPA.PROJECT_ID
		LEFT OUTER JOIN
		CLIENT_COMPANY_INFO AS CCI ON CCI.COMPANY_ID = BPP.COMPANY_ID
		LEFT OUTER JOIN
		OUR_MEMBERS_INFO AS OMI ON OMI.MEMBER_ID_NUM = BPA.ACTION_OWNER_ID
		
			WHERE 1=1
			AND BPA.DUE_DATE IS NOT NULL
			AND BPA.CLOSE_DATE IS NULL
		 
		ORDER BY BPA.ACTION_ID ASC;
	</select>
	
	<select id="selectClientOpportunityCheckListTracking" parameterType="hashmap" resultType="hashmap">
		SELECT 
			OAP.OPPORTUNITY_ID,
			OAP.ACTION_PLAN_NAME,
			OAP.DUE_DATE,
			OAP.SOLVE_OWNER_ID,
			OMI.HAN_NAME AS SOLVE_OWNER_NAME,
			OMI.POSITION_STATUS AS SOLVE_OWNER_POSITION,
			
			OAP.ACTION_OWNER,
			OMI2.HAN_NAME AS ACTION_OWNER_NAME,
			OMI2.POSITION_STATUS AS ACTION_OWNER_POSITION,
			
			OL.SUBJECT,
			OL.OWNER_ID,
			OL.IDENTIFIER_ID,
			CCI.COMPANY_NAME,
			<!-- CII.CUSTOMER_NAME -->
			CCI2.COMPANY_NAME AS END_USER
		FROM OPPORTUNITY_ACTION_PLAN AS OAP
		LEFT OUTER JOIN
			OPPORTUNITY_LOG AS OL ON OL.OPPORTUNITY_ID = OAP.OPPORTUNITY_ID
		LEFT OUTER JOIN
			CLIENT_COMPANY_INFO CCI ON CCI.COMPANY_ID = OL.COMPANY_ID
		<!-- LEFT OUTER JOIN
			CLIENT_INDIVIDUAL_INFO CII ON CII.CUSTOMER_ID = OL.CUSTOMER_ID -->
		LEFT OUTER JOIN
			CLIENT_COMPANY_INFO CCI2 ON CCI2.COMPANY_ID = OL.CUSTOMER_ID
		LEFT OUTER JOIN
			OUR_MEMBERS_INFO AS OMI ON OMI.MEMBER_ID_NUM = OAP.SOLVE_OWNER_ID
		LEFT OUTER JOIN
			OUR_MEMBERS_INFO AS OMI2 ON OMI2.MEMBER_ID_NUM = OAP.ACTION_OWNER
		WHERE 1=1 
		AND OL.TEMP_FLAG = 'N'
		AND OAP.DUE_DATE IS NOT NULL
		AND OAP.CLOSE_DATE IS NULL
	</select>
	
	<select id="selectClientOpportunityWinPlanTracking" parameterType="hashmap" resultType="hashmap">
		SELECT 
			OWP.OPPORTUNITY_ID,
			OWP.ACTION_PLAN_NAME,
			OWP.DUE_DATE,
			OWP.ACTION_OWNER,
			OMI.HAN_NAME AS ACTION_OWNER_NAME,
			OMI.POSITION_STATUS AS ACTION_OWNER_POSITION,
			OL.SUBJECT,
			OL.OWNER_ID,
			OL.IDENTIFIER_ID,
			CCI.COMPANY_NAME,
			CII.CUSTOMER_NAME
		FROM OPPORTUNITY_WIN_PLAN AS OWP
		LEFT OUTER JOIN
			OPPORTUNITY_LOG AS OL ON OL.OPPORTUNITY_ID = OWP.OPPORTUNITY_ID
		LEFT OUTER JOIN
			CLIENT_COMPANY_INFO CCI ON CCI.COMPANY_ID = OL.COMPANY_ID
		LEFT OUTER JOIN
			CLIENT_INDIVIDUAL_INFO CII ON CII.CUSTOMER_ID = OL.CUSTOMER_ID
		LEFT OUTER JOIN
			OUR_MEMBERS_INFO AS OMI ON OMI.MEMBER_ID_NUM = OWP.ACTION_OWNER
		WHERE 1=1 
		AND OL.TEMP_FLAG = 'N'
		AND OWP.DUE_DATE IS NOT NULL
		AND OWP.CLOSE_DATE IS NULL
	</select>
	
	<delete id="deleteOffice365CalendarEvent" parameterType="hashmap">
		DELETE FROM CALENDAR_EVENT 
		WHERE 1=1
		AND CALENDAR_ID IN
			(
			SELECT
				CALENDAR_ID
			FROM CALENDAR_MASTER
			WHERE 1=1
			AND CALENDAR_TYPE = '2'
			AND MEMBER_ID_NUM = #{hiddenUserId}
			)
	</delete>
	
	<insert id="insertOffice365CalendarEvent" parameterType="hashmap">
			INSERT INTO CALENDAR_EVENT(
				CALENDAR_ID, 
				MEMBER_ID_NUM, 
				EVENT_CODE,
				EVENT_SUBJECT,
				EVENT_DETAIL,
				START_DATETIME,
				END_DATETIME,
				LOCATION,
				SYS_REGISTER_DATE, 
				SYS_UPDATE_DATE,
				DELETE_YN
			)
			VALUES
			<foreach item="event" index="index" collection="list" open="" separator="," close="">
			(
				(SELECT CE.CALENDAR_ID FROM CALENDAR_MASTER AS CE WHERE 1=1 AND CE.CALENDAR_TYPE = '2' AND CE.MEMBER_ID_NUM = #{event.MEMBER_ID_NUM}  ORDER BY CE.CALENDAR_ID ASC LIMIT 1),
				#{event.MEMBER_ID_NUM},
				'10',
				#{event.SUMMARY},
				#{event.DESCRIPTION},
				#{event.DTSTART},
				#{event.DTEND},
				#{event.LOCATION},
				CURRENT_TIMESTAMP,
				CURRENT_TIMESTAMP,
				'Y'
			)
			</foreach>
	</insert>
	
	<select id="selectTodayCalendarEventMemberList" parameterType="hashmap" resultType="hashmap">
		SELECT 
			DISTINCT CE.MEMBER_ID_NUM,
			OMI.EMAIL 
		FROM CALENDAR_EVENT AS CE
		LEFT OUTER JOIN
			CALENDAR_MASTER AS CM ON CM.CALENDAR_ID = CE.CALENDAR_ID
		LEFT OUTER JOIN
			OUR_MEMBERS_INFO AS OMI ON OMI.MEMBER_ID_NUM = CE.MEMBER_ID_NUM
		WHERE 1=1
		AND ( (CM.CALENDAR_TYPE = '1' AND CE.DELETE_YN = 'N') OR (CM.CALENDAR_TYPE = '2') )
		AND DATE_FORMAT(CE.START_DATETIME,'%Y-%m-%d') = DATE_FORMAT(NOW(),'%Y-%m-%d');
	</select>
	
	<select id="selectMemberCalendarEventTracking" parameterType="hashmap" resultType="hashmap">
		SELECT 
			CE.EVENT_SUBJECT,
			CE.EVENT_CODE,
			DATE_FORMAT(CE.START_DATETIME,'%Y-%m-%d %H:%i') AS START_DATETIME,
			DATE_FORMAT(CE.END_DATETIME,'%Y-%m-%d %H:%i') AS END_DATETIME,
			CE.LOCATION
		FROM CALENDAR_EVENT AS CE
		LEFT OUTER JOIN
			CALENDAR_MASTER AS CM ON CM.CALENDAR_ID = CE.CALENDAR_ID
		WHERE 1=1
		AND CE.MEMBER_ID_NUM = #{MEMBER_ID_NUM}
		AND ( (CM.CALENDAR_TYPE = '1' AND CE.DELETE_YN = 'N') OR (CM.CALENDAR_TYPE = '2') )
		AND DATE_FORMAT(CE.START_DATETIME,'%Y-%m-%d') = DATE_FORMAT(NOW(),'%Y-%m-%d')
	</select>
	
	<select id="selectMemberTrackingOption" parameterType="hashmap" resultType="hashmap">
		SELECT
			*
		FROM COM_USER_TRACKING 
		WHERE 1=1 
		<choose>
			<when test="memberList != null and memberList != '' ">
			AND MEMBER_ID_NUM IN(#{memberList}, 'default')
			AND TRACKING_CATEGORY = #{TRACKING_CATEGORY}
			</when>
			<otherwise>
			AND MEMBER_ID_NUM IN(#{global_member_id}, 'default')
			</otherwise>
		</choose>
		ORDER BY MEMBER_ID_NUM, TRACKING_CATEGORY ASC
	</select>
	
	<select id="selectProposalsInfoTracking" parameterType="hashmap" resultType="hashmap">
		SELECT
			PM.PROPOSAL_ID,
			PM.CATEGORY_PRODUCT,
			PM.PROPOSAL_SUBJECT,
			PM.DETAIL_CONTENTS,
			PM.COMPANY_ID,
			CCI.COMPANY_NAME,
			PM.CUSTOMER_ID,
			CII.CUSTOMER_NAME,
			GROUP_CONCAT(CII.CUSTOMER_NAME,'[',CCI.COMPANY_NAME,']') AS CUSTOMER_INFOS,
			PM.PROPOSAL_LEADER_ID,
			OMI.HAN_NAME,
			OMI.POSITION_STATUS,
			PM.PROPOSAL_START_DATE,
			PM.PROPOSAL_END_DATE,
			PM.PROPOSAL_PT_DATE,
			PM.PROPOSAL_RESULT_DATE,
			<choose>
				<when test="TYPE == 'SED' ">
				PM.PROPOSAL_END_DATE
				</when>
				<when test="TYPE == 'SPD' ">
				PM.PROPOSAL_PT_DATE
				</when>
				<when test="TYPE == 'SRD' ">
				PM.PROPOSAL_RESULT_DATE
				</when>
			</choose> AS TARGET_DATE,
			CATEGORY_BIZ
		FROM PROPOSAL_MGMT AS PM
		LEFT OUTER JOIN
			OUR_MEMBERS_INFO AS OMI ON OMI.MEMBER_ID_NUM = PM.PROPOSAL_LEADER_ID
		LEFT OUTER JOIN
			CLIENT_COMPANY_INFO AS CCI ON CCI.COMPANY_ID = PM.COMPANY_ID
		LEFT OUTER JOIN
			CLIENT_INDIVIDUAL_INFO AS CII ON CII.CUSTOMER_ID = PM.CUSTOMER_ID
		WHERE 1=1
		<choose>
			<when test="TYPE == 'SED' ">
			AND PM.PROPOSAL_END_DATE IS NOT NULL
			</when>
			<when test="TYPE == 'SPD' ">
			AND PM.PROPOSAL_PT_DATE IS NOT NULL
			</when>
			<when test="TYPE == 'SRD' ">
			AND PM.PROPOSAL_RESULT_DATE IS NOT NULL
			</when>
		</choose>
	</select>
	
	<insert id="insertUserTrackingOption" parameterType="hashmap">
		INSERT INTO COM_USER_TRACKING
		(
			MEMBER_ID_NUM, 
			TRACKING_CATEGORY, 
			TRACKING_CATEGORY_NAME, 
			FULL_USE_YN, 
			ALARM_USE_YN, 
			MAIL_USE_YN,
			MOBILE_USE_YN,
			BEFORE_DUE_DATE,
			AFTER_DUE_DATE,
			FRQNC_BEFROE_USE_YN,
			FRQNC_BEFROE,
			FRQNC_AFTER_USE_YN,
			FRQNC_AFTER,
			SYS_REGISTER_DATE,
			SYS_UPDATE_DATE
		)
		VALUES
		(
			#{MEMBER_ID_NUM}, 
			#{TRACKING_CATEGORY},  
			#{TRACKING_CATEGORY_NAME}, 
			#{FULL_USE_YN},
			#{ALARM_USE_YN},
			#{MAIL_USE_YN},
			#{MOBILE_USE_YN},
			#{BEFORE_DUE_DATE},
			#{AFTER_DUE_DATE},
			#{FRQNC_BEFROE_USE_YN},
			#{FRQNC_BEFROE},
			#{FRQNC_AFTER_USE_YN},
			#{FRQNC_AFTER},
			CURRENT_TIMESTAMP,
			CURRENT_TIMESTAMP
		);
	</insert>
	
	<update id="updateUserTrackingOption" parameterType="hashmap">
		UPDATE COM_USER_TRACKING
			SET
				MEMBER_ID_NUM = #{MEMBER_ID_NUM},
				TRACKING_CATEGORY = #{TRACKING_CATEGORY},
				TRACKING_CATEGORY_NAME = #{TRACKING_CATEGORY_NAME},
				FULL_USE_YN = #{FULL_USE_YN},
				ALARM_USE_YN = #{ALARM_USE_YN},
				MAIL_USE_YN = #{MAIL_USE_YN},
				MOBILE_USE_YN = #{MOBILE_USE_YN},
				BEFORE_DUE_DATE = #{BEFORE_DUE_DATE},
				AFTER_DUE_DATE = #{AFTER_DUE_DATE},
				FRQNC_BEFROE_USE_YN = #{FRQNC_BEFROE_USE_YN},
				FRQNC_BEFROE = #{FRQNC_BEFROE},
				FRQNC_AFTER_USE_YN = #{FRQNC_AFTER_USE_YN},
				FRQNC_AFTER = #{FRQNC_AFTER},
				SYS_UPDATE_DATE = CURRENT_TIMESTAMP
		WHERE  1=1
		AND COM_USER_TRACKING_ID = #{COM_USER_TRACKING_ID}
	</update>
	
	<select id="selectDivisionMember" parameterType="hashmap" resultType="hashmap">
		SELECT 
			OMI.MEMBER_ID_NUM,
			OMI.HAN_NAME,
			OMI.POSITION_STATUS,
			IFNULL(CUT.MEMBER_ID_NUM, NULL) AS INSERT_YN
		FROM OUR_MEMBERS_INFO AS OMI
		LEFT OUTER JOIN
			COM_USER_TRACKING AS CUT ON OMI.MEMBER_ID_NUM = CUT.MEMBER_ID_NUM AND CUT.TRACKING_CATEGORY = #{TRACKING_CATEGORY}
		WHERE 1=1 
		AND OMI.MEMBER_DIVISION = #{global_member_division}
		GROUP BY OMI.MEMBER_ID_NUM
	</select>
	
</mapper>