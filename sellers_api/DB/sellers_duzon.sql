-- sellers_test에서 작업하면서 DDL 저장 후 운영서버에 반영 예정

-- 2018 - 03 - 14 
-- 신용평가현황 테이블 생성 
CREATE TABLE `erp_company_credit_eval` (
  `COMPANY_CODE` varchar(40) NOT NULL COMMENT '거래처코드',
  `COMPANY_NAME` varchar(100) NOT NULL COMMENT '거래처명',
  `COMPANY_REG_NO` varchar(40) NOT NULL COMMENT '사업자등록번호',
  `LOAN_GRADE` varchar(6) NOT NULL COMMENT '여신등급',
  `CREDIT_AMOUNT` decimal(12,0) NOT NULL COMMENT '여신급액',
  `BUSINESS_STATUS` varchar(400) DEFAULT NULL COMMENT '거래상태',
  `BUSINESS_CONDITIONS` varchar(100) DEFAULT NULL COMMENT '업태',
  `BUSINESS_TYPE` varchar(100) DEFAULT NULL COMMENT '업종',
  `BUSINESS_DATE` date DEFAULT NULL COMMENT '설립일',
  `COMPANY_AMOUNT` decimal(12,0) DEFAULT NULL COMMENT '자본금',
  `COMPANY_OWNER` varchar(80) DEFAULT NULL COMMENT '대표자명',
  `BUSINESS_FORM` varchar(6) DEFAULT NULL COMMENT '기업형태',
  `CHECK_1` varchar(6) DEFAULT NULL COMMENT '대표자연대 보증여부',
  `CHECK_2` varchar(6) DEFAULT NULL COMMENT '채권양도 양수여부',
  `CHECK_3` varchar(6) DEFAULT NULL COMMENT '공동통장 개설여부',
  `AUDIT_OPINION` varchar(100) DEFAULT NULL COMMENT '감사의견',
  `CREDIT_RATING` varchar(40) DEFAULT NULL COMMENT '신용등급',
  `CASH_FLOWS` varchar(40) DEFAULT NULL COMMENT '현금흐름',
  `ABT_DEBIT` varchar(40) DEFAULT NULL COMMENT '지급능력(유동비율_)',
  `ABT_SAFETY` varchar(40) DEFAULT NULL COMMENT '안정성',
  `ABT_GROWTH` varchar(40) DEFAULT NULL COMMENT '성장성',
  `ABT_ACTIVITY` varchar(40) DEFAULT NULL COMMENT '활동성',
  `DC_RMK` varchar(200) DEFAULT NULL COMMENT '비고',
  `AM_GRNT` decimal(12,0) DEFAULT NULL COMMENT '담보금액',
  `AM_GUARANTEE` decimal(12,0) DEFAULT NULL COMMENT '지급보증액',
  `DT_GUARANTEE_FR` date DEFAULT NULL COMMENT '지급보증시작일',
  `DT_GUARANTEE_TO` date DEFAULT NULL COMMENT '지급보증종료일',
  `DT_SFC_NEW` date DEFAULT NULL COMMENT '여신평가일',
  `YY_SALE` year(4) DEFAULT NULL COMMENT '최종매출년도',
  `AM_SALE` decimal(12,0) DEFAULT NULL COMMENT '매출액',
  `AM_PROFIT` decimal(12,0) DEFAULT NULL COMMENT '이익',
  `BASIS_YEAR` year(4) NOT NULL COMMENT '기준년도',
  `SYS_REGISTER_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '최초등록일시',
  `SYS_UPDATE_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '최종변경일시',
  UNIQUE KEY `idx_erp_company_credit_eval_00` (`COMPANY_CODE`,`COMPANY_NAME`,`BASIS_YEAR`),
  KEY `idx_erp_company_credit_eval_01` (`COMPANY_NAME`,`BASIS_YEAR`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='ERP_신용평가현황';

-- 2018-03-15
-- 본부 테이블 ERP CD 추가
-- 팀 테이블 ERP CD 추가
ALTER TABLE sellers_test.our_division_info ADD ERP_DIVISION_CD varchar(20) NULL COMMENT 'ERP본부코드' ;
ALTER TABLE sellers_test.our_division_info ADD CONSTRAINT our_division_info_un UNIQUE KEY (ERP_DIVISION_CD) ;
ALTER TABLE sellers_test.our_division_info DROP KEY idx_OUR_DIVISION_INFO_02 ;

ALTER TABLE sellers_test.our_team_info ADD ERP_TEAM_CD varchar(20) NULL COMMENT 'ERP팀코드' ;
ALTER TABLE sellers_test.our_team_info ADD CONSTRAINT our_team_info_un UNIQUE KEY (ERP_TEAM_CD) ;
ALTER TABLE sellers_test.our_team_info DROP KEY idx_OUR_TEAM_INFO_02 ;

-- 2018-03-16
-- 매출목표 테이블 소속본부 컬럼 NULL, 소속팀명 컬럼 NULL
-- 매출목표 테이블 사번 컬럼 NOT NULL
ALTER TABLE sellers_test.erp_sales_plan MODIFY COLUMN MEMBER_DIVISION varchar(20) NULL COMMENT '소속본부명' ;
ALTER TABLE sellers_test.erp_sales_plan MODIFY COLUMN MEMBER_TEAM varchar(20) NULL COMMENT '소속팀명' ;
ALTER TABLE sellers_test.erp_sales_plan MODIFY COLUMN MEMBER_ID_NUM varchar(10) NOT NULL COMMENT '사번' ;

-- 매출목표 테이블 유니크 키값 추가
ALTER TABLE sellers_test.erp_sales_plan ADD UNIQUE KEY (`MEMBER_ID_NUM`,`BASIS_MONTH`);


-- 사원테이블 컬럼 타입 변경
ALTER TABLE sellers_test.our_members_info MODIFY COLUMN MEMBER_DIVISION varchar(20) NULL COMMENT '소속본부' ;
ALTER TABLE sellers_test.our_members_info MODIFY COLUMN MEMBER_TEAM varchar(20) NULL COMMENT '소속팀' ;


-- ERP_거래처대표정보 테이블 생성
CREATE TABLE `erp_client_salesman_info` (
  `COMPANY_CODE` varchar(20) NOT NULL COMMENT '거래처코드',
  `CLIENT_CODE` varchar(20) NOT NULL COMMENT '고객코드',
  `CLIENT_NAME` varchar(20) NOT NULL COMMENT '고객명',
  `DIVISION_NAME` varchar(100) DEFAULT NULL COMMENT '부서',
  `POSITION_RANK` varchar(20) DEFAULT NULL COMMENT '직급',
  `CELL_PHONE` varchar(40) DEFAULT NULL COMMENT '휴대전화',
  `EMAIL` varchar(100) DEFAULT NULL COMMENT 'E-mail',
  `PHONE` varchar(40) DEFAULT NULL COMMENT '전화번호',
  `FAX` varchar(40) DEFAULT NULL COMMENT 'FAX번호',
  `USE_YN` varchar(10) DEFAULT NULL COMMENT '사용여부',
  `DC_RMK` varchar(200) DEFAULT NULL COMMENT '비고',
  `SYS_REGISTER_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '최초등록일시',
  `SYS_UPDATE_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '최종변경일시',
  UNIQUE KEY `erp_client_salesman_info_00` (`COMPANY_CODE`,`CLIENT_CODE`),
  KEY `idx_erp_client_salesman_info_01` (`CLIENT_CODE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='ERP_거래처대표정보';


-- 제품정보 테이블 제거 후 
DROP TABLE sellers_test.our_product_info ;
-- ERP_품목정보테이블 생성
CREATE TABLE `our_product_info` (
  `PRODUCT_NO` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '제품번호',
  `PRODUCT_CODE` varchar(20) NOT NULL COMMENT '품목코드',
  `PRODUCT_NAME` varchar(200) NOT NULL COMMENT '품목명',
  `WORKS_CODE` varchar(20) NOT NULL COMMENT '공장코드',
  `PRODUCT_STANDARD` varchar(150) DEFAULT NULL COMMENT '규격',
  `USE_YN` char(1) DEFAULT 'Y' COMMENT '사용여부',
  `SYS_REGISTER_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '최초등록일시',
  `SYS_UPDATE_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '최종변경일시',
  PRIMARY KEY (`PRODUCT_NO`),
  UNIQUE KEY `our_product_info_00` (`PRODUCT_CODE`),
  KEY `idx_OUR_PRODUCT_INFO_01` (`PRODUCT_CODE`,`PRODUCT_NAME`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='ERP_품목정보';


-- 영업기회 컬럼 추가
ALTER TABLE sellers_test.opportunity_log ADD ERP_OPP_CD varchar(20) NULL COMMENT 'ERP영업기회코드';
ALTER TABLE sellers_test.opportunity_log ADD ERP_INST_CD varchar(20) NULL COMMENT 'ERP사전손익코드' ;
ALTER TABLE sellers_test.opportunity_log ADD ERP_CHANGE_DATE DATE NULL COMMENT 'ERP전환일자';
ALTER TABLE sellers_test.opportunity_log ADD CATEGORY_CD varchar(10) NULL COMMENT '영업기회구분코드';
ALTER TABLE sellers_test.opportunity_log ADD ISSUE_STATUS_CD varchar(10) NULL COMMENT '발급신청상태';
ALTER TABLE sellers_test.opportunity_log ADD CLOSE_DATE varchar(10) NULL COMMENT '영업기회종료일';
ALTER TABLE sellers_test.opportunity_log ADD TYPE_CD varchar(10) NULL COMMENT '영업기회유형코드';
ALTER TABLE sellers_test.opportunity_log ADD PROJECT_FORM_CD varchar(10) NULL COMMENT '프로젝트형태코드';
ALTER TABLE sellers_test.opportunity_log ADD OPP_STATUS_CD varchar(10) NULL COMMENT '영업기회상태';
ALTER TABLE sellers_test.opportunity_log ADD PROBABILITY_CD varchar(10) NULL COMMENT '수주확률';
ALTER TABLE sellers_test.opportunity_log ADD CONTRACT_ST_DATE DATE NULL COMMENT '예상계약기간 시작일';
ALTER TABLE sellers_test.opportunity_log ADD CONTRACT_ED_DATE DATE NULL COMMENT '예상계약기간 종료일';
ALTER TABLE sellers_test.opportunity_log ADD X_LOG_CD varchar(10) NULL COMMENT 'X-LOG 여부';
ALTER TABLE sellers_test.opportunity_log ADD OMM_CD varchar(10) NULL COMMENT 'OMM 등록여부';
ALTER TABLE sellers_test.opportunity_log ADD PROGRESS_CD varchar(10) NULL COMMENT '진행단계';
ALTER TABLE sellers_test.opportunity_log ADD ERP_CLIENT_CD varchar(20) NULL COMMENT 'ERP고객관리 담당자코드';
ALTER TABLE sellers_test.opportunity_log ADD ERP_CLIENT_CATEGORY_CD varchar(20) NULL COMMENT 'ERP고객관리 구분코드';

-- 매출품목 리스트
CREATE TABLE `OPPORTUNITY_SALES_PRODUCT_LIST` (
  `OSPL_ID` BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '아이디',
  `OPPORTUNITY_ID` BIGINT(20) UNSIGNED NOT NULL COMMENT '영업기회아이디',
  `PRODUCT_ORDER` SMALLINT(6) NOT NULL COMMENT '순번',
  `PRODUCT_CD` VARCHAR(20) NOT NULL COMMENT '매출품목코드',
  `PRODUCT_PRICE` DECIMAL(12,0) DEFAULT NULL COMMENT '단가',
  `PRODUCT_YN` VARCHAR(10) DEFAULT NULL COMMENT '대표여부',
  `PRODUCT_COUNT` SMALLINT(6) DEFAULT NULL COMMENT '수량',
  `SYS_REGISTER_DATE` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP COMMENT '최초등록일시',
  `SYS_UPDATE_DATE` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '최종변경일시',
  `WORKS_CD` VARCHAR(20) NOT NULL COMMENT '공장코드',
  PRIMARY KEY (`OSPL_ID`),
  UNIQUE KEY (`OPPORTUNITY_ID`,`PRODUCT_ORDER`),
  KEY `IDX_OPPORTUNITY_SALES_PRODUCT_LIST_01` (`OSPL_ID`,`OPPORTUNITY_ID`,`PRODUCT_CD`),
  KEY `OPPORTUNITY_SALES_PRODUCT_LIST_IBFK_1` (`OPPORTUNITY_ID`),
  CONSTRAINT `OPPORTUNITY_SALES_PRODUCT_LIST_IBFK_1` FOREIGN KEY (`OPPORTUNITY_ID`) REFERENCES `OPPORTUNITY_LOG` (`OPPORTUNITY_ID`) ON DELETE NO ACTION ON UPDATE CASCADE
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT='매출품목 리스트';

-- 매입품목 리스트
CREATE TABLE `opportunity_purchase_product_list` (
  `OPPL_ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '아이디',
  `OPPORTUNITY_ID` bigint(20) unsigned NOT NULL COMMENT '영업기회아이디',
  `PRODUCT_ORDER` smallint(6) NOT NULL COMMENT '순번',
  `PRODUCT_CD` varchar(20) NOT NULL COMMENT '매입품목코드',
  `PRODUCT_PRICE` decimal(12,0) DEFAULT NULL COMMENT '단가',
  `PRODUCT_COUNT` smallint(6) DEFAULT NULL COMMENT '수량',
  `PURCHASE_ENTER_CD` varchar(20) DEFAULT NULL COMMENT '매입처코드',
  `PURCHASE_DATE` date DEFAULT NULL COMMENT '매입예정일자',
  `SYS_REGISTER_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '최초등록일시',
  `SYS_UPDATE_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '최종변경일시',
  `WORKS_CD` varchar(20) NOT NULL COMMENT '공장코드',
  PRIMARY KEY (`OPPL_ID`),
  UNIQUE KEY (`OPPORTUNITY_ID`,`PRODUCT_ORDER`),
  KEY `idx_OPPORTUNITY_PURCHASE_PRODUCT_LIST_01` (`OPPL_ID`,`OPPORTUNITY_ID`,`PRODUCT_CD`),
  KEY `opportunity_purchase_product_list_ibfk_1` (`OPPORTUNITY_ID`),
  CONSTRAINT `opportunity_purchase_product_list_ibfk_1` FOREIGN KEY (`OPPORTUNITY_ID`) REFERENCES `opportunity_log` (`OPPORTUNITY_ID`) ON DELETE NO ACTION ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='매입품목 리스트';


-- 영업기회 쿼리 튜닝
CREATE INDEX idx_OPPORTUNITY_LOG_TCV_HISTORY_02 USING BTREE ON sellers_test.opportunity_log_tcv_history (HISTORY_SYS_REGISTER_DATE);


-- 고객사 ERP_REG_CODE unique key 설정 전 빈값 update
UPDATE CLIENT_COMPANY_INFO SET ERP_REG_CODE = NULL WHERE ERP_REG_CODE = '';
-- ERP_REG_CODE unique key 설정
ALTER TABLE CLIENT_COMPANY_INFO add UNIQUE KEY `idx_CLIENT_COMPANY_INFO_00` (`ERP_REG_CODE`);
-- 불필요한 unique key 설정 제거
ALTER TABLE sellers_test.client_company_info DROP KEY idx_CLIENT_COMPANY_INFO_02 ;
-- 연관 데이터가 없는 고객사 데이터 삭제
DELETE FROM CLIENT_COMPANY_INFO 
WHERE COMPANY_ID NOT IN ( SELECT *
	FROM(  
		SELECT 
		-- COUNT(*)
		CCI.COMPANY_ID
		-- GROUP_CONCAT(CCIF.COMPANY_ID) AS CCIF_IDS,
		-- GROUP_CONCAT(BPP.COMPANY_ID) AS BPP_IDS,
		-- GROUP_CONCAT(ECLM.COMPANY_ID) AS ECLM_IDS,
		-- GROUP_CONCAT(PP.COMPANY_ID) AS PP_IDS,
		-- GROUP_CONCAT(STAM.COMPANY_ID) AS STAM_IDS,
		-- GROUP_CONCAT(CII.COMPANY_ID) AS CII_IDS,
		-- GROUP_CONCAT(CCL.CLIENT_ID) AS CCL_IDS,
		-- GROUP_CONCAT(COL.CUSTOMER_ID) AS COL_IDS,
		-- GROUP_CONCAT(CEL.CUSTOMER_ID) AS CEL_IDS,
		-- GROUP_CONCAT(CIH.CURRENT_CUST_ID) AS CIHC_IDS,
		-- GROUP_CONCAT(CIH.BEFORE_CUST_ID) AS CIHB_IDS,
		-- GROUP_CONCAT(CIP.CUSTOMER_ID) AS CIP_IDS,
		-- GROUP_CONCAT(CIS.CUSTOMER_ID) AS CIS_IDS,
		-- GROUP_CONCAT(CIL.CUSTOMER_ID) AS CIL_IDS,
		-- GROUP_CONCAT(CSL.RESP_CUSTOMER_ID) AS CSL_IDS,
		-- GROUP_CONCAT(OHL.CUSTOMER_ID) AS OHL_IDS,
		-- GROUP_CONCAT(OL.CUSTOMER_ID) AS OL_IDS,
		-- GROUP_CONCAT(OLUH.CUSTOMER_ID) AS OLUH_IDS,
		-- GROUP_CONCAT(PJM.CUSTOMER_ID) AS PJM_IDS,
		-- GROUP_CONCAT(PPM.CUSTOMER_ID) AS PPM_IDS
		FROM CLIENT_COMPANY_INFO AS CCI
		LEFT OUTER JOIN
		CLIENT_COMPANY_INFO_FILE_STORE AS CCIF ON CCI.COMPANY_ID = CCIF.COMPANY_ID
		LEFT OUTER JOIN
		BIZ_PROJECT_PLAN AS BPP ON CCI.COMPANY_ID = BPP.COMPANY_ID
		LEFT OUTER JOIN
		ERP_CLIENT_LOAD_MARKETING AS ECLM ON CCI.COMPANY_ID = ECLM.COMPANY_ID
		LEFT OUTER JOIN
		PROJECT_PLAN AS PP ON CCI.COMPANY_ID = PP.COMPANY_ID
		LEFT OUTER JOIN
		SALES_TERRITORY_ALIGN_MAP AS STAM ON CCI.COMPANY_ID = STAM.COMPANY_ID 
		LEFT OUTER JOIN
		CLIENT_INDIVIDUAL_INFO AS CII ON CCI.COMPANY_ID = CII.COMPANY_ID
		LEFT OUTER JOIN
		COM_CLIENT_LIST AS CCL ON CII.CUSTOMER_ID = CCL.CLIENT_ID
		LEFT OUTER JOIN
		CEO_ONHAND_LOG AS COL ON CII.CUSTOMER_ID = COL.CUSTOMER_ID
		LEFT OUTER JOIN
		CLIENT_EVENT_LOG AS CEL ON CII.CUSTOMER_ID = CEL.CUSTOMER_ID
		LEFT OUTER JOIN
		CLIENT_INDIVIDUAL_HISTORY AS CIH ON (CII.CUSTOMER_ID = CIH.CURRENT_CUST_ID OR CII.CUSTOMER_ID = CIH.BEFORE_CUST_ID)
		LEFT OUTER JOIN
		CLIENT_INDIVIDUAL_PHOTO_STORE AS CIP ON CII.CUSTOMER_ID = CIP.CUSTOMER_ID
		LEFT OUTER JOIN
		CLIENT_INDIVIDUAL_SALES AS CIS ON CII.CUSTOMER_ID = CIS.CUSTOMER_ID
		LEFT OUTER JOIN
		CLIENT_ISSUE_LOG AS CIL ON CII.CUSTOMER_ID = CIL.CUSTOMER_ID
		LEFT OUTER JOIN
		CLIENT_SATDETAIL_LOG AS CSL ON CII.CUSTOMER_ID = CSL.RESP_CUSTOMER_ID
		LEFT OUTER JOIN
		OPPORTUNITY_HIDDEN_LOG AS OHL ON CII.CUSTOMER_ID = OHL.CUSTOMER_ID
		LEFT OUTER JOIN
		OPPORTUNITY_LOG AS OL ON CII.CUSTOMER_ID = OL.CUSTOMER_ID
		LEFT OUTER JOIN
		OPPORTUNITY_LOG_UPDATE_HISTORY AS OLUH ON CII.CUSTOMER_ID = OLUH.CUSTOMER_ID
		LEFT OUTER JOIN
		PROJECT_MGMT AS PJM ON CII.CUSTOMER_ID = PJM.CUSTOMER_ID
		LEFT OUTER JOIN
		PROPOSAL_MGMT AS PPM ON CII.CUSTOMER_ID = PPM.CUSTOMER_ID
		WHERE 1=1
		AND (
			CCIF.COMPANY_ID IS NOT NULL
		    OR BPP.COMPANY_ID IS NOT NULL
		    OR ECLM.COMPANY_ID IS NOT NULL
		    OR PP.COMPANY_ID IS NOT NULL
		    OR STAM.COMPANY_ID IS NOT NULL
		    OR CII.COMPANY_ID IS NOT NULL
		    OR CCL.CLIENT_ID IS NOT NULL
		    OR COL.CUSTOMER_ID IS NOT NULL
		    OR CEL.CUSTOMER_ID IS NOT NULL
		    OR CIH.CURRENT_CUST_ID IS NOT NULL
		    OR CIH.BEFORE_CUST_ID IS NOT NULL
		    OR CIP.CUSTOMER_ID IS NOT NULL
		    OR CIS.CUSTOMER_ID IS NOT NULL
		    OR CIL.CUSTOMER_ID IS NOT NULL
		    OR CSL.RESP_CUSTOMER_ID IS NOT NULL
		    OR OHL.CUSTOMER_ID IS NOT NULL
		    OR OL.CUSTOMER_ID IS NOT NULL
		    OR OLUH.CUSTOMER_ID IS NOT NULL
		    OR PJM.CUSTOMER_ID IS NOT NULL
		    OR PPM.CUSTOMER_ID IS NOT NULL
		)
		GROUP BY CCI.COMPANY_ID
	)AS COMPANY_ID
);

-- 고객사명이 같은 두개이상의 고객사 정보
SELECT 
GROUP_CONCAT(CCI.COMPANY_ID) AS COMPANY_IDS,
GROUP_CONCAT(CCI.SEGMENT_CODE) AS SEGMENT_CODES, 
GROUP_CONCAT(CCI.ERP_REG_CODE) AS ERP_REG_CODES, 
CCI.COMPANY_NAME, 
GROUP_CONCAT(CCI.CEO_NAME) AS CEO_NAMES, 
GROUP_CONCAT(CCI.COMPANY_TELNO) AS COMPANY_TELNOS, 
GROUP_CONCAT(CCI.POSTAL_CODE) AS POSTAL_CODES, 
GROUP_CONCAT(CCI.POSTAL_ADDRESS) AS POSTAL_ADDRESSS, 
GROUP_CONCAT(CCI.BUSINESS_NUMBER) AS BUSINESS_NUMBERS, 
GROUP_CONCAT(CCI.BUSINESS_TYPE) AS BUSINESS_TYPES, 
GROUP_CONCAT(CCI.BUSINESS_SECTOR) AS BUSINESS_SECTORS, 
GROUP_CONCAT(CCI.COMPANY_STATUS) AS COMPANY_STATUSS, 
GROUP_CONCAT(CCI.CIO_NAME) AS CIO_NAMES, 
GROUP_CONCAT(CCI.CTO_NAME) AS CTO_NAMES, 
GROUP_CONCAT(CCI.CEO_ID) AS CEO_IDS, 
GROUP_CONCAT(CCI.CIO_ID) AS CIO_IDS, 
GROUP_CONCAT(CCI.CTO_ID) AS CTO_IDS, 
GROUP_CONCAT(CCI.CLIENT_CATEGORY) AS CLIENT_CATEGORYS, 
GROUP_CONCAT(CCI.BIZ_CATEGORY) AS BIZ_CATEGORYS, 
GROUP_CONCAT(CCI.BIZ_DIVISION) AS BIZ_DIVISIONS, 
GROUP_CONCAT(CCI.SYS_REGISTER_DATE) AS SYS_REGISTER_DATES, 
GROUP_CONCAT(CCI.SYS_UPDATE_DATE) AS SYS_UPDATE_DATES, 
GROUP_CONCAT(CCI.CREATOR_ID) AS CREATOR_IDS,
COUNT(COMPANY_NAME) AS CNT
FROM CLIENT_COMPANY_INFO AS CCI 
WHERE 1=1 
AND COMPANY_NAME IN (
	SELECT COMPANY_NAME FROM CLIENT_COMPANY_INFO
	WHERE 1=1 AND ERP_REG_CODE IS NULL
	)
GROUP BY COMPANY_NAME
HAVING CNT > 1;


-- 공통코드관리 테이블 생성
CREATE TABLE `com_code` (
  `COM_CODE_ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '공통코드관리번호',
  `CODE_ID` varchar(10) NOT NULL COMMENT '공통코드',
  `PARENT_CODE_ID` varchar(10) NOT NULL COMMENT '상위공통코드',
  `CODE_NAME` varchar(40) NOT NULL COMMENT '코드명',
  `CODE_ORDER` smallint(6) DEFAULT NULL COMMENT '정렬순서',
  `USE_YN` char(1) DEFAULT 'Y' COMMENT '사용여부 [Y/N]',
  `SYS_REGISTER_DATE` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '등록일자',
  `SYS_UPDATE_DATE` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '수정일자',
  PRIMARY KEY (`COM_CODE_ID`),
  UNIQUE KEY `com_code_key_00` (`CODE_ID`,`PARENT_CODE_ID`),
  KEY `com_code_Index_1` (`CODE_ID`,`PARENT_CODE_ID`),
  KEY `com_code_Index_2` (`CODE_NAME`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='공통코드관리';
-- 공통코드 연동(프로젝트형태, 영업구분) 전 부모코드 생성
INSERT INTO COM_CODE(CODE_ID, PARENT_CODE_ID, CODE_NAME, USE_YN, SYS_REGISTER_DATE, SYS_UPDATE_DATE)
VALUES('PROJECT', '', '프로젝트형태코드', 'Y', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('TPSO', '', '영업구분코드', 'Y', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

-- 사전손익 분석 마스터
CREATE TABLE `erp_sfa_pfls_master` (
  `SEQ_NUM` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '손익분석 SEQ',
  `NO_INST` varchar(20) NOT NULL COMMENT '손익분석코드',
  `NO_INST_HST` smallint(6) DEFAULT NULL COMMENT '손익분석차수',
  `NM_INST` varchar(200) DEFAULT NULL COMMENT '손익분석명',
  `NO_PROJECT` varchar(20) NOT NULL COMMENT '프로젝트코드',
  `NM_PROJECT` varchar(200) DEFAULT NULL COMMENT '프로젝트명',
  `CD_PARTNER` varchar(20) DEFAULT NULL COMMENT '매출처코드',
  `LN_PARTNER` varchar(100) DEFAULT NULL COMMENT '매출처명',
  `CD_PARTNER_END` varchar(20) DEFAULT NULL COMMENT 'END_USER코드',
  `LN_PARTNER_END` varchar(50) DEFAULT NULL COMMENT 'END_USER명',
  `TO_SO` varchar(10) DEFAULT NULL COMMENT '영업구분(수주유형)',
  `NO_EMP` varchar(10) NOT NULL COMMENT '영업대표사번',
  `TP_PROJECT` varchar(10) DEFAULT NULL COMMENT '프로젝트형태',
  `DC_RMK` varchar(1000) DEFAULT NULL COMMENT '프로젝트개요',
  `YN_LAST` varchar(10) DEFAULT NULL COMMENT '최종여부',
  `STEP_OPTY` varchar(10) DEFAULT NULL COMMENT '진행단계',
  `FG_CREDIT_SPECIAL` varchar(10) DEFAULT NULL COMMENT '특별여신진행상태',
  `FG_GW` varchar(10) DEFAULT NULL COMMENT '수주보고서상태',
  `DT_INST` date DEFAULT NULL COMMENT '손익작성일',
  `CD_DEPT` varchar(10) DEFAULT NULL COMMENT '작성부서코드',
  `SYS_REGISTER_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '최초등록일시',
  `SYS_UPDATE_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '최종변경일시',
  `AM_SALE_PLAN` decimal(12,0) DEFAULT NULL COMMENT '예상수주금액',
  PRIMARY KEY (`SEQ_NUM`),
  UNIQUE KEY `NO_INST` (`NO_INST`),
  KEY `idx_ERP_SFA_PFLS_MASTER_01` (`NO_PROJECT`),
  KEY `idx_ERP_SFA_PFLS_MASTER_02` (`NO_EMP`)
) ENGINE=InnoDB AUTO_INCREMENT=171750 DEFAULT CHARSET=utf8 COMMENT='ERP_사전손익_분석';


-- 사전손익 매출 품목
CREATE TABLE `erp_sfa_pfls_item1` (
  `SEQ_NUM` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '손익분석 매출품목 SEQ',
  `NO_INST` varchar(20) NOT NULL COMMENT '손익분석코드',
  `NO_INST_HST` smallint(6) DEFAULT NULL COMMENT '손익분석차수',
  `SEQ_ITEM` smallint(6) DEFAULT NULL COMMENT '품목순번',
  `CD_PLANT` varchar(10) DEFAULT NULL COMMENT '공장코드',
  `CD_ITEM` varchar(20) DEFAULT NULL COMMENT '품목코드',
  `NM_ITEM` varchar(200) DEFAULT NULL COMMENT '품목명',
  `UM_OPTY` decimal(12,0) DEFAULT NULL COMMENT '단가',
  `QT_OPTY` int(11) DEFAULT NULL COMMENT '수량',
  `NO_PROJECT` varchar(20) DEFAULT NULL COMMENT '프로젝트코드',
  `SYS_REGISTER_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '최초등록일시',
  `SYS_UPDATE_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '최종변경일시',
  PRIMARY KEY (`SEQ_NUM`),
  UNIQUE KEY `NO_INST` (`NO_INST`,`SEQ_ITEM`)
) ENGINE=InnoDB AUTO_INCREMENT=288059 DEFAULT CHARSET=utf8 COMMENT='ERP_사전손익_매출품목';


-- 사전손익 매입 품목
CREATE TABLE `erp_sfa_pfls_item2` (
  `SEQ_NUM` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '손익분석 매출품목 SEQ',
  `NO_INST` varchar(20) NOT NULL COMMENT '손익분석코드',
  `NO_INST_HST` smallint(6) DEFAULT NULL COMMENT '손익분석차수',
  `SEQ_ITEM` smallint(6) DEFAULT NULL COMMENT '품목순번',
  `CD_PLANT` varchar(10) DEFAULT NULL COMMENT '공장코드',
  `CD_ITEM` varchar(20) DEFAULT NULL COMMENT '품목코드',
  `NM_ITEM` varchar(200) DEFAULT NULL COMMENT '품목명',
  `UM_OPTY` decimal(12,0) DEFAULT NULL COMMENT '단가',
  `QT_OPTY` int(11) DEFAULT NULL COMMENT '수량',
  `CD_PARTNER` varchar(10) DEFAULT NULL COMMENT '매입처코드',
  `LN_PARTNER` varchar(50) DEFAULT NULL COMMENT '매입처명',
  `ITEM_DATE` DATE DEFAULT NULL COMMENT '매입예정일',
  `NO_PROJECT` varchar(20) COMMENT '프로젝트코드',
  `SYS_REGISTER_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '최초등록일시',
  `SYS_UPDATE_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '최종변경일시',
  PRIMARY KEY (`SEQ_NUM`),
  UNIQUE KEY `NO_INST` (`NO_INST`,`SEQ_ITEM`)
) ENGINE=InnoDB AUTO_INCREMENT=109457 DEFAULT CHARSET=utf8 COMMENT='ERP_사전손익_매입품목';


-- 사전손익 수금계획
CREATE TABLE `ERP_SFA_PFLSH_BILL` (
  `SEQ_NUM` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '손익분석 매출품목 SEQ',
  `NO_INST` varchar(20) NOT NULL COMMENT '손익분석코드',
  `NO_INST_HST` smallint COMMENT '손익분석차수',
  `SEQ_BILL` smallint COMMENT '수금계획순번',
  `CD_PARTNER` varchar(10) default null COMMENT '매출처코드',
  `LN_PARTNER` varchar(50) default null COMMENT '매출처명',
  `DT_SALES` date default null COMMENT '매출일자',
  `DT_BILL` date default null COMMENT '수금일자',
  `TP_BILL_COND` varchar(10) default null COMMENT '수금조건구분',
  `AM_BILL` decimal(12,0) default null COMMENT '수금금액',
  `AM_VAT` decimal(12,0) default null COMMENT '부가세',
  `AMVAT_BILL` decimal(12,0) default null COMMENT '수금합계액',
  `TP_BILL_CONT` varchar(10) default null COMMENT '수금내용구분',
  `TP_BILL_FORM` varchar(10) default null COMMENT '수금형태구분',
  `DC_RMK` varchar(100) default null COMMENT '비고',
  `SYS_REGISTER_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '최초등록일시',
  `SYS_UPDATE_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '최종변경일시',
  PRIMARY KEY (`SEQ_NUM`),
  UNIQUE KEY (`NO_INST`,`SEQ_BILL`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COMMENT='ERP_사전손익_수금계획';

ALTER TABLE sellers_test.erp_dashboard_checklist ADD COMPANY_NAME varchar(100) NULL ;
ALTER TABLE sellers_test.erp_sfa_pflsh_bill ADD NO_PROJECT varchar(20) NULL ;
ALTER TABLE sellers_test.erp_dashboard_checklist ADD CONSTRAINT erp_dashboard_checklist_un UNIQUE KEY (PROJECT_ID) ;
ALTER TABLE sellers_test.erp_dashboard_checklist ADD MEMBER_ID_NUM varchar(20) NULL COMMENT '사원번호' ;
ALTER TABLE sellers_test.erp_sales_actual ADD Y_TCV decimal(12,0) NULL ;


CREATE TABLE `erp_sfa_pflsh_pay` (
  `SEQ_NUM` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '손익분석 매출품목 SEQ',
  `NO_INST` varchar(20) NOT NULL COMMENT '손익분석코드',
  `NO_INST_HST` smallint(6) DEFAULT NULL COMMENT '손익분석차수',
  `SEQ_PAY` smallint(6) DEFAULT NULL COMMENT '수금계획순번',
  `CD_PARTNER` varchar(10) DEFAULT NULL COMMENT '매입처코드',
  `LN_PARTNER` varchar(50) DEFAULT NULL COMMENT '매입처명',
  `DT_SALES` date DEFAULT NULL COMMENT '매입일자',
  `DT_BILL` date DEFAULT NULL COMMENT '지급일자',
  `TP_BILL_COND` varchar(10) DEFAULT NULL COMMENT '지급조건구분',
  `AM_BILL` decimal(12,0) DEFAULT NULL COMMENT '지급금액',
  `AM_VAT` decimal(12,0) DEFAULT NULL COMMENT '부가세',
  `AMVAT_BILL` decimal(12,0) DEFAULT NULL COMMENT '지급합계액',
  `TP_BILL_CONT` varchar(10) DEFAULT NULL COMMENT '지급내용구분',
  `TP_BILL_FORM` varchar(10) DEFAULT NULL COMMENT '지급형태구분',
  `DC_RMK` varchar(100) DEFAULT NULL COMMENT '비고',
  `SYS_REGISTER_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '최초등록일시',
  `SYS_UPDATE_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '최종변경일시',
  `NO_PROJECT` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`SEQ_NUM`),
  UNIQUE KEY `NO_INST` (`NO_INST`,`SEQ_PAY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='ERP_사전손익_지급계획';

ALTER TABLE sellers.erp_dashboard_checklist MODIFY COLUMN ACCRUE_GP decimal(20,0) NULL COMMENT '누적GP' ;
ALTER TABLE sellers.erp_dashboard_checklist MODIFY COLUMN ACCRUE_REV decimal(20,0) NULL COMMENT '누적REV' ;
ALTER TABLE sellers.erp_dashboard_checklist MODIFY COLUMN TCV decimal(20,0) NULL COMMENT 'TCV' ;


ALTER TABLE sellers_test.erp_sfa_pflsh_pay CHANGE DT_BILL DT_PAY date NULL COMMENT '지급일자' ;
ALTER TABLE sellers_test.erp_sfa_pflsh_pay CHANGE TP_BILL_COND TP_PAY_COND varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '지급조건구분' ;
ALTER TABLE sellers_test.erp_sfa_pflsh_pay CHANGE AM_BILL AM_PAY decimal(12,0) NULL COMMENT '지급금액' ;
ALTER TABLE sellers_test.erp_sfa_pflsh_pay CHANGE AMVAT_BILL AMVAT_PAY decimal(12,0) NULL COMMENT '지급합계액' ;
ALTER TABLE sellers_test.erp_sfa_pflsh_pay CHANGE TP_BILL_CONT TP_PAY_CONT varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '지급내용구분' ;
ALTER TABLE sellers_test.erp_sfa_pflsh_pay CHANGE TP_BILL_FORM TP_PAY_FORM varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '지급형태구분' ;


CREATE INDEX erp_sfa_pflsh_bill_no_project_idx USING BTREE ON sellers_test.erp_sfa_pflsh_bill (NO_PROJECT) ;
CREATE INDEX erp_sfa_pflsh_pay_no_project_idx USING BTREE ON sellers_test.erp_sfa_pflsh_pay (NO_PROJECT) ;
ALTER TABLE sellers_test.erp_sfa_pflsh_pay CHANGE DT_SALES DT_BUY date NULL COMMENT '매입일자' ;

ALTER TABLE sellers_test.erp_dashboard_checklist MODIFY COLUMN ACCRUE_REV decimal(20,0) NULL COMMENT '누적REV' ;
ALTER TABLE sellers_test.erp_dashboard_checklist MODIFY COLUMN ACCRUE_GP decimal(20,0) NULL COMMENT '누적GP' ;
ALTER TABLE sellers_test.erp_dashboard_checklist MODIFY COLUMN TCV decimal(20,0) NULL COMMENT 'TCV' ;

ALTER TABLE sellers_test.opportunity_log MODIFY COLUMN CONTRACT_AMOUNT decimal(18,0) NOT NULL COMMENT '예상계약금액' ;
ALTER TABLE sellers_test.opportunity_log MODIFY COLUMN GP_AMOUNT decimal(18,0) NULL COMMENT '예상GP금액' ;

ALTER TABLE sellers_test.opportunity_amount MODIFY COLUMN BASIS_PLAN_GP_AMOUNT decimal(12,0) DEFAULT 0 NULL COMMENT '매출계획금액GP' ;
ALTER TABLE sellers_test.opportunity_amount MODIFY COLUMN BASIS_PLAN_REVENUE_AMOUNT decimal(12,0) DEFAULT 0 NULL COMMENT '매출계획금액' ;

ALTER TABLE sellers_test.erp_sales_actual MODIFY COLUMN `1Q_ACTUAL_REV_AMOUNT` decimal(12,0) DEFAULT 0 NULL COMMENT '1Q매출금액' ;
ALTER TABLE sellers_test.erp_sales_actual MODIFY COLUMN `1Q_ACTUAL_TCV_AMOUNT` decimal(12,0) DEFAULT 0 NULL COMMENT '1Q총매출금액' ;
ALTER TABLE sellers_test.erp_sales_actual MODIFY COLUMN `1Q_ACTUAL_GP_AMOUNT` decimal(12,0) DEFAULT 0 NULL COMMENT '1Q영업이익금액' ;
ALTER TABLE sellers_test.erp_sales_actual MODIFY COLUMN `2Q_ACTUAL_TCV_AMOUNT` decimal(12,0) DEFAULT 0 NULL COMMENT '2Q총매출금액' ;
ALTER TABLE sellers_test.erp_sales_actual MODIFY COLUMN `2Q_ACTUAL_REV_AMOUNT` decimal(12,0) DEFAULT 0 NULL COMMENT '2Q매출금액' ;
ALTER TABLE sellers_test.erp_sales_actual MODIFY COLUMN `2Q_ACTUAL_GP_AMOUNT` decimal(12,0) DEFAULT 0 NULL COMMENT '2Q영업이익금액' ;
ALTER TABLE sellers_test.erp_sales_actual MODIFY COLUMN `3Q_ACTUAL_TCV_AMOUNT` decimal(12,0) DEFAULT 0 NULL COMMENT '3Q총매출금액' ;
ALTER TABLE sellers_test.erp_sales_actual MODIFY COLUMN `3Q_ACTUAL_REV_AMOUNT` decimal(12,0) DEFAULT 0 NULL COMMENT '3Q매출금액' ;
ALTER TABLE sellers_test.erp_sales_actual MODIFY COLUMN `3Q_ACTUAL_GP_AMOUNT` decimal(12,0) DEFAULT 0 NULL COMMENT '3Q영업이익금액' ;
ALTER TABLE sellers_test.erp_sales_actual MODIFY COLUMN `4Q_ACTUAL_TCV_AMOUNT` decimal(12,0) DEFAULT 0 NULL COMMENT '4Q총매출금액' ;
ALTER TABLE sellers_test.erp_sales_actual MODIFY COLUMN `4Q_ACTUAL_REV_AMOUNT` decimal(12,0) DEFAULT 0 NULL COMMENT '4Q매출금액' ;
ALTER TABLE sellers_test.erp_sales_actual MODIFY COLUMN `4Q_ACTUAL_GP_AMOUNT` decimal(12,0) DEFAULT 0 NULL COMMENT '4Q영업이익금액' ;
ALTER TABLE sellers_test.erp_sales_actual MODIFY COLUMN `1q_actual_pgp_amount` decimal(12,0) DEFAULT 0 NULL COMMENT '1Q총영업이익금액' ;
ALTER TABLE sellers_test.erp_sales_actual MODIFY COLUMN Y_TCV decimal(12,0) DEFAULT 0 NULL ;


drop procedure `sellers_test`.`update_opportunity_salescycle`;
CREATE DEFINER=`sellers`@`%` PROCEDURE `sellers_test`.`update_opportunity_salescycle`()
begin
		
		-- 주간보고서에서 rev = tcv 같으면 종료
		UPDATE
		OPPORTUNITY_LOG AS OL
		INNER JOIN
		ERP_DASHBOARD_CHECKLIST AS EDC ON OL.ERP_PROJECT_CODE = EDC.PROJECT_ID
			SET OL.SALES_CYCLE = '4'
		WHERE 1=1
		AND (OL.ERP_PROJECT_CODE IS NOT NULL AND OL.ERP_PROJECT_CODE != '') 
		AND OL.SALES_CYCLE != '4'
		AND EDC.TCV = EDC.ACCRUE_REV;
		
		COMMIT;
end;

ALTER TABLE sellers_test.opportunity_amount MODIFY COLUMN ERP_REV decimal(12,0) DEFAULT 0 NULL COMMENT 'ERP_REV' ;
ALTER TABLE sellers_test.opportunity_amount MODIFY COLUMN ERP_GP decimal(12,0) DEFAULT 0 NULL COMMENT 'ERP_GP' ;

update OPPORTUNITY_AMOUNT
	SET BASIS_PLAN_REVENUE_AMOUNT = 0
where 1=1
and (BASIS_PLAN_REVENUE_AMOUNT IS NULL or BASIS_PLAN_REVENUE_AMOUNT = '');

UPDATE OPPORTUNITY_AMOUNT
	SET BASIS_PLAN_GP_AMOUNT = 0
WHERE 1=1
AND (BASIS_PLAN_GP_AMOUNT IS NULL OR BASIS_PLAN_GP_AMOUNT = '');

UPDATE OPPORTUNITY_AMOUNT
	SET ERP_GP = 0
WHERE 1=1
AND (ERP_GP IS NULL OR ERP_GP = '');

UPDATE OPPORTUNITY_AMOUNT
	SET ERP_REV = 0
WHERE 1=1
AND (ERP_REV IS NULL OR ERP_REV = '');


CREATE TABLE ERP_SFA_SOPTY_H (
	CD_COMPANY varchar(7) NOT NULL,
	CD_OPTY varchar(20) NOT NULL,
	NM_OPTY varchar(100) NOT NULL,
	NO_PROJECT varchar(20),
	DT_OPTY_ST varchar(8) NOT NULL,
	DT_OPTY_ED varchar(8),
	CD_PARTNER varchar(20),
	CD_PARTNER_END varchar(20),
	CD_DEPT varchar(7),
	NO_EMP varchar(15),
	TO_SO varchar(4),
	STEP_OPTY varchar(4) DEFAULT '0001',
	FG_GW varchar(4) DEFAULT '2',
	ST_OPTY varchar(4) DEFAULT '0001',
	TP_LOSE_CLOSE varchar(4),
	DC_LOSE_CLOSE varchar(100),
	CONTACT_SALE varchar(4) DEFAULT '0001',
	TP_PROJECT varchar(4),
	RATE_SALE_PLAN varchar(2),
	DT_SALE_PLAN varchar(8),
	AM_SALE_PLAN DECIMAL(17,0) DEFAULT 0,
	DT_PJT_PLAN_ST varchar(8),
	DT_PJT_PLAN_ED varchar(8),
	YN_XLOB varchar(2) DEFAULT 'N',
	YN_OMM varchar(2) DEFAULT 'N',
	DC_RMK varchar(500),
	ID_INSERT varchar(15),
	DTS_INSERT varchar(14),
	ID_UPDATE varchar(15),
	DTS_UPDATE varchar(14),
	NO_EMP_PM varchar(15),
	PRIMARY KEY (`CD_OPTY`),
	KEY `idx_ERP_SFA_SOPTY_H_01` (`NO_PROJECT`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='ERP_영업기회';

ALTER TABLE sellers_test.opportunity_amount ADD CONSTRAINT opportunity_amount_un UNIQUE KEY (BASIS_MONTH,OPPORTUNITY_ID) ;

--매출품목,매입품목 단가 소수점4자리추가
ALTER TABLE sellers.opportunity_sales_product_list MODIFY COLUMN PRODUCT_PRICE decimal(16,4) NULL COMMENT '단가' ;
ALTER TABLE sellers.opportunity_purchase_product_list MODIFY COLUMN PRODUCT_PRICE decimal(16,4) NULL COMMENT '단가' ;

--고객사 휴폐업,일자 추가
ALTER TABLE sellers_test.client_company_info ADD CD_CON varchar(3) NULL COMMENT '휴폐업구분[003폐업]' ;
ALTER TABLE sellers_test.client_company_info ADD DT_CLOSE varchar(8) NULL COMMENT '폐업일자' ;

--오피스365 연동 일정 장소 컬럼 수정
ALTER TABLE sellers_unipoint.calendar_event MODIFY COLUMN LOCATION varchar(80) NULL COMMENT '장소' ;